services:
  rest-server:
    container_name: rest_py_container
    image: python:3.11
    environment:
       - FLASK_APP=rest.py
       - FLASK_ENV=development
    volumes:
       - ./rest:/restData
    ports:
      - "${REST_EXPOSED_PORT}:4160" 
    command: >
      bash -c "
        pip install --no-cache-dir -r /restData/requirements.txt && 
        python /restData/rest.py
      "
    networks:
      - main_network
    restart: unless-stopped

  client-server:
    container_name: client_py_container
    image: python:3.11
    environment:
       - FLASK_APP=client.py
       - FLASK_ENV=development
    volumes:
       - ./client:/clientData
    ports:
      - "${CLIENT_EXPOSED_PORT}:6041" 
    command: >
      bash -c "
        pip install --no-cache-dir -r /clientData/requirements.txt && 
        python /clientData/client.py
      "
    networks:
      - main_network
    restart: unless-stopped

  postgres:
    container_name: postgres_container    
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - ./postgresData:/data/postgres # to choose your personal directory, change only the left path. 
       - ./attendere_prego.sh:/attendere_prego.sh
    ports:
      - "${POSTGRES_EXPOSED_PORT}:5432" # to choose your personal port, change only the left port.
    networks:
      - main_network
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
       - ./pgadminData:/var/lib/pgadmin # to choose your personal directory, change only the left path.
       - ./attendere_prego.sh:/attendere_prego.sh
    ports:
      - "${PGADMIN_EXPOSED_PORT}:80"  
    networks:
      - main_network
    restart: unless-stopped

networks:
  main_network: 
    driver: bridge

volumes:
    rest:
    postgres:
    pgadmin:
